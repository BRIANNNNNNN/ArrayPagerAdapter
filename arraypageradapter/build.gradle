apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = 'https://github.com/takaaki7/ArrayPagerAdapter'
def gitUrl = 'https://github.com/takaaki7/ArrayPagerAdapter.git'

bintray {
    def secretFile = file("${rootDir}/secret/secret.gradle")
    if (secretFile.exists()) {
        apply from: secretFile.absolutePath
        user = project.ext.bintray_user
        key = project.ext.bintray_api_key
    }

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = project.name
        desc = ARTIFACT_DESCRIPTION
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/takaaki7/ArrayPagerAdapter/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android', 'example']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'ArrayPagerAdapter'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'tnakama'
                        name 'Takaaki Nakama'
                        email 'nakama67006700@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    options {
        linksOffline "http://d.android.com/reference", System.getenv("ANDROID_HOME") + "/docs/reference"
    }
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}